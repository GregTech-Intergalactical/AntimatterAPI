archivesBaseName = "${rootProject.antimatter_archive_base_name}-common"
version = "${rootProject.minecraft_version}-${project.mod_version}"

repositories {
    maven {
        url = uri("https://storage.googleapis.com/devan-maven/")
    }
}

loom {
    accessWidenerPath = file("src/main/resources/antimatter.accesswidener")
}

boolean hasTesseract = findProject(':tesseract-common') != null



dependencies{
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    compileOnly("com.blamejared.crafttweaker:CraftTweaker-common-1.18.2:${rootProject.crafttweaker_version}")
    modCompileOnly("dev.latvian.mods:kubejs-fabric:${rootProject.kubejs_version}")
    implementation(project(path: ":tesseract-common", configuration: "namedElements"))
    modImplementation("io.github.feltmc:fabricated-forge-caps:${rootProject.fabricated_forge_hash}"){
        exclude(group: "net.fabricmc.fabric-api")
    }
    modCompileOnly("net.fabricmc.fabric-api:fabric-transfer-api-v1:${rootProject.fabric_transfer_api_version}")
    modCompileOnly("io.github.fabricators_of_create:Porting-Lib:1.1.310-beta+1.18.2-dev.${rootProject.port_lib_hash}"){ transitive(false) }
    modImplementation("io.github.feltmc:fabricated-forge-modeldata:${rootProject.fabricated_forge_hash}"){
        transitive = false
    }
    modImplementation("com.github.Trins-mods:CT-Fabric-Fluid-Support:${project.ct_fabric_fluid_support_hash}"){
        transitive = false
    }
    modImplementation("io.github.feltmc:fabricated-forge-tag-extensions:${rootProject.fabricated_forge_hash}") { transitive false }
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api:${rootProject.rei_version}"
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin:${rootProject.rei_version}"
    modCompileOnly("mezz.jei:jei-${rootProject.minecraft_version}-common-api:${rootProject.jei_version}")
    compileOnly("com.electronwill.night-config:toml:${rootProject.nightconfig_version}")
    compileOnly("com.electronwill.night-config:core:${rootProject.nightconfig_version}")
    modCompileOnly("net.devtech:arrp:0.5.7")
    modImplementation("com.github.FeltMC:forgeconfigapiport-fabric:c1486f80f7"){
        transitive = false
    }
    modCompileOnly("curse.maven:the-one-probe-fabric-581847:${project.top_fabric_file}")
}

architectury {
    common("forge", "fabric")
}

publishing {
    publications {
        mavenJava(org.gradle.api.publish.maven.MavenPublication) {
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }

            afterEvaluate {
                artifact remapJar
            }
        }
    }

    repositories {
        def isCI = System.getenv("GITHUB_ACTION")
        def isRELEASE = System.getenv("GITHUB_RELEASE")
        if (isCI && isRELEASE) {
            maven {
                name = "GTMaven"
                url = "https://repo.repsy.io/mvn/trinsdar/gregtech-intergalactical/"
                credentials {
                    username = System.getenv("MAVEN_USERNAME")
                    password = System.getenv("MAVEN_PASSWORD")
                }
            }
        } else {
            maven { url "file:///${project.projectDir}/mcmodsrepo"}
        }
    }
}
